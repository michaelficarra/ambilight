{"name":"ambilight","body":"This is a small project for creating an ambilight clone using an Arduino, a\r\nstring of LEDs and WS2801s, and boblight. Installation instructions are\r\nprovided for the Arduino Uno and Fedora 16, though they won't likely differ\r\nmuch for any Arduino/Unix-like combination.\r\n\r\n\r\n## Parts List\r\n\r\n* Arduino Uno\r\n* [12mm Diffused Digital RGB LED Pixels (Strand of 25) - WS2801](http://www.adafruit.com/products/322)\r\n* 4 jumpers\r\n\r\n\r\n## Installation\r\n\r\nMake sure you have a `libraries` directory in the directory configured as your\r\nsketchbook in your arduino preferences.\r\n\r\n```bash\r\nSKETCHBOOK_PATH=$(grep ^sketchbook.path ~/.arduino/preferences.txt | cut -d = -f 2)\r\nmkdir -p \"$SKETCHBOOK_PATH/libraries\"\r\n```\r\n\r\nMake sure you have the SPI library installed.\r\n\r\n```bash\r\ncd /tmp\r\ngit clone git://github.com/arduino/Arduino.git arduino\r\nmv arduino/libraries/SPI \"$SKETCHBOOK_PATH/libraries\"\r\nrm -rf arduino\r\n```\r\n\r\nGet the WS2801 library.\r\n\r\n```bash\r\ncd \"$SKETCHBOOK_PATH/libraries\"\r\ngit clone git://github.com/adafruit/WS2801-Library.git WS2801\r\n```\r\n\r\nClone this project.\r\n\r\n```bash\r\ncd \"$SKETCHBOOK_PATH\"\r\ngit clone git://github.com/michaelficarra/ambilight.git ambilight\r\n```\r\n\r\nBoblight requires libavcodec. The Fedora build of ffmpeg didn't seem to come\r\nwith libavcodec, so we'll have to get it ourselves.\r\n\r\n```bash\r\ncd /tmp\r\nwget http://libav.org/releases/libav-0.7.3.tar.gz -O - | tar xz\r\ncd libav-0.7.3\r\n./configure && make && sudo make install\r\n```\r\n\r\nDownload and install boblight.\r\n\r\n```bash\r\ncd /tmp\r\nsvn checkout http://boblight.googlecode.com/svn/trunk/ boblight\r\ncd boblight\r\n./configure && make && sudo make install\r\n```\r\n\r\nInstall the boblight configuration file.\r\n\r\n```bash\r\nsudo cp \"$SKETCHBOOK_PATH/ambilight/boblight.conf\" /etc/\r\n```\r\n\r\nIn the ardruino software, `File -> sketchbook -> ambilight`. Configure the\r\n`dataPin`, `clockPin`, `stripLength`, `serialRate`, and `prefix` values.\r\n`Ctrl-u` to compile and upload to your Arduino. Unplug your Arduino and attach\r\nthe LED strip to your Arduino as in the following pictures.\r\n\r\n![connection to Arduino](http://i.imgur.com/gBIbp.jpg)\r\n\r\n![connection to WS2801](http://i.imgur.com/stw2o.jpg)\r\n\r\n![WS2801 pins: from top to bottom: data, clock, ground, +5V](http://i.imgur.com/HDW4i.jpg)\r\n\r\n\r\n## Configuration\r\n\r\nThere's a few configurable values in `ambilight.ino`.\r\n\r\n0. `dataPin`: the number of the Arduino pin connected to the WS2801 data pin\r\n0. `clockPin`: the number of the Arduino pin connected to the WS2801 clock pin\r\n0. `stripLength`: the number of WS2801-LED pairs, must be greater than zero\r\n0. `serialRate`: `rate` value from `[device]` section of `/etc/boblight.conf`\r\n0. `prefix`: `prefix` value from `[device]` section of `/etc/boblight.conf`\r\n\r\n`/etc/boblight.conf` has to be configured with the regions (boblight calls\r\nthem \"lights\") that are sampled for each individual LED. Below is a diagram of\r\nmy configuration.\r\n\r\n![boblight.conf setup, with image of light positions](http://i.imgur.com/g9RV9.png)\r\n\r\n\r\n## Running\r\n\r\nConnect the arduino to USB. The first LED should be red, indicating it is\r\nwaiting for a client.\r\n\r\nStart the boblight daemon with `boblightd`. To detach it, instead run `nohup\r\nboblightd &>/dev/null &`. `boblight-x11` connects to the `boblightd` daemon and\r\nsends the screen image data. I pass in some options with `-o`.\r\n\r\n    boblight-X11 -s 127.0.0.1:19333 -o saturation=1.7 -o value=0.5 -o threshold=60\r\n\r\nAgain, `nohup` may be used to detach it.","tagline":"ambilight clone for your arduino and some WS2801s using boblight","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}